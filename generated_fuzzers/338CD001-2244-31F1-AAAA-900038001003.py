
from fuzzer.midl import *
from fuzzer.core import *
interface_0 = Interface("338CD001-2244-31F1-AAAA-900038001003", "1.0",[
Method("OpenClassesRoot",
In(PREGISTRY_SERVER_NAME),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("OpenCurrentUser",
In(PREGISTRY_SERVER_NAME),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("OpenLocalMachine",
In(PREGISTRY_SERVER_NAME),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("OpenPerformanceData",
In(PREGISTRY_SERVER_NAME),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("OpenUsers",
In(PREGISTRY_SERVER_NAME),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("BaseRegCloseKey",
InOut(PRPC_HKEY),
),
Method("BaseRegCreateKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(PRRP_UNICODE_STRING),
In(DWORD),
In(REGSAM),
In(PRPC_SECURITY_ATTRIBUTES),
Out(PRPC_HKEY),
InOut(LPDWORD),
),
Method("BaseRegDeleteKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
),
Method("BaseRegDeleteValue",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
),
Method("BaseRegEnumKey",
In(RPC_HKEY),
In(DWORD),
In(PRRP_UNICODE_STRING),
Out(PRRP_UNICODE_STRING),
In(PRRP_UNICODE_STRING),
Out(PPRPC_UNICODE_STRING),
InOut(PFILETIME),
),
Method("BaseRegEnumValue",
In(RPC_HKEY),
In(DWORD),
In(PRRP_UNICODE_STRING),
Out(PRPC_UNICODE_STRING),
InOut(LPDWORD),
InOut(LPBYTE),
InOut(LPDWORD),
InOut(LPDWORD),
),
Method("BaseRegFlushKey",
In(RPC_HKEY),
),
Method("BaseRegGetKeySecurity",
In(RPC_HKEY),
In(SECURITY_INFORMATION),
In(PRPC_SECURITY_DESCRIPTOR),
Out(PRPC_SECURITY_DESCRIPTOR),
),
Method("BaseRegLoadKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(PRRP_UNICODE_STRING),
),
Method("Opnum14NotImplemented",
),
Method("BaseRegOpenKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(DWORD),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("BaseRegQueryInfoKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
Out(PRPC_UNICODE_STRING),
Out(LPDWORD),
Out(LPDWORD),
Out(LPDWORD),
Out(LPDWORD),
Out(LPDWORD),
Out(LPDWORD),
Out(LPDWORD),
Out(PFILETIME),
),
Method("BaseRegQueryValue",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
InOut(LPDWORD),
InOut(LPBYTE),
InOut(LPDWORD),
InOut(LPDWORD),
),
Method("BaseRegReplaceKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(PRRP_UNICODE_STRING),
In(PRRP_UNICODE_STRING),
),
Method("BaseRegRestoreKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(DWORD),
),
Method("BaseRegSaveKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(PRPC_SECURITY_ATTRIBUTES),
),
Method("BaseRegSetKeySecurity",
In(RPC_HKEY),
In(SECURITY_INFORMATION),
In(PRPC_SECURITY_DESCRIPTOR),
),
Method("BaseRegSetValue",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(DWORD),
In(LPBYTE),
In(DWORD),
),
Method("BaseRegUnLoadKey",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
),
Method("Opnum24NotImplemented",
),
Method("Opnum25NotImplemented",
),
Method("BaseRegGetVersion",
In(RPC_HKEY),
Out(LPDWORD),
),
Method("OpenCurrentConfig",
In(PREGISTRY_SERVER_NAME),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("Opnum28NotImplemented",
),
Method("BaseRegQueryMultipleValues",
In(RPC_HKEY),
In(PRVALENT),
Out(PRVALENT),
In(DWORD),
InOut(PCHAR),
InOut(LPDWORD),
),
Method("Opnum30NotImplemented",
),
Method("BaseRegSaveKeyEx",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(PRPC_SECURITY_ATTRIBUTES),
In(DWORD),
),
Method("OpenPerformanceText",
In(PREGISTRY_SERVER_NAME),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("OpenPerformanceNlsText",
In(PREGISTRY_SERVER_NAME),
In(REGSAM),
Out(PRPC_HKEY),
),
Method("BaseRegQueryMultipleValues2",
In(RPC_HKEY),
In(PRVALENT),
Out(PRVALENT),
In(DWORD),
InOut(PCHAR),
In(LPDWORD),
Out(LPDWORD),
),
Method("BaseRegDeleteKeyEx",
In(RPC_HKEY),
In(PRRP_UNICODE_STRING),
In(REGSAM),
In(DWORD),
),
])
